
 USE CASE :- 

@startuml UseCase
left to right direction
actor Student
actor Teacher
actor Parent
actor adminstartor

usecase "Submit Assignments" as U1
usecase "View Grades" as U2
usecase "Attend Class" as U3
usecase "Assign Grades" as U4
usecase "Communicate with Teachers" as U5
usecase "View School Notice" as U6
usecase "Register New Students" as U7
usecase "Schedule Parent-Teacher Meetings" as U8
usecase "Assign Teachers to Courses" as U9

Student --> U1
Student --> U2
Student --> U3
Student --> U6

Teacher --> U4
Teacher --> U6

adminstartor --> U7
adminstartor --> U9
adminstartor --> U8

Parent --> U2
Parent --> U5
Parent --> U6
@enduml


CLASS DIAGRAM :- 


@startuml
class School {
    +name: String
    +address: String
}

class Student {
    +studentID: String
    +name: String
    +gradeLevel: Integer
    +viewGrades(): List<Grade>
}

class Teacher {
    +teacherID: String
    +name: String
    +subject: String
    +assignGrade(student: Student, grade: Grade): void
}

class Subject {
    +SubjectID: String
    +SubjectName: String
    +Grades: Integer

}

class Grade {
    +gradeID: String
    +value: String
    
}

class Classroom {
    +roomNumber: String
    +capacity: Integer
}

School --> "many" Student
School --> "many" Teacher 
School --> "many" Subject 
School --> "many" Classroom 


Subject --> "taught by" Teacher 
Subject --> "includes" Grade 

@enduml





SEQUENCE DIAGARAM


@startuml

actor Student
participant School
participant Teacher
participant Subject
participant Grade

Student -> School: Get Admission()
School -> Student: Confirm Admission()

Student -> School: Attend Subject()
School -> Subject: Add Student to Subject
Subject -> Teacher: Assign Teacher to Subject
Teacher -> Subject: Start Teaching

Student -> Subject: Submit Assignment()
Subject -> Teacher: Grade Assignment()
Teacher -> Grade: Create Grade
Grade -> Subject: Add Grade to Subject

Student -> Subject: View Grades()
Subject -> Grade: Retrieve Grades
Grade -> Subject: Return Grades
Subject -> Student: Display Grades

@enduml

ACTIVITY DIAGRAM - 


@startuml Activity

:Apply for Admission;

:Process Admission;
if (Admission Approved?) then (Yes)
    :Confirm Admission;
else (No)
    stop
endif

:Add Student to Subject;

:Assign Assignment;
if (Submit Assignment?) then (Yes)
    :Submit Assignment;
    :Create Grade;
    :Add Grade to Subject;
else (No)

     :View Grades;
     :Return Grades;
     :Display Grades;
endif

:End;
@enduml
